4.4 Visibility

auditing vs monitoring?

PC? 
AC: Active Choreographies 
DLT?
ACES: 	Active Choreographiy Execution Suit
		web-app build on Etherium framework to execute and monitor ACs
		Do we get a link to that???

Model level:
problem:Should I hide parts of the AC to some parties? 
pro: 	might protect my business logic 
		someone might want take advantage of my logic. Might prevent them from doing so
con: 	point of AC is to clarify what parties want/do
		since ACs do transparent monitoring/auditing, participants 
		should be open abt everything
solve:  Do not put sensitive logic in the AC


Communication level: 
- level of exchanging messages
problem: 	evil party can analyse which messages are being sent
			and from that determine the business logic
solution: 	Only make msg visible within a scope
careful: 	Result of that msg might be detectible outside scope 


Content level: 
- sensitive data 
- e.g. credit card info
- exchange data within scope
- only exchange data outside scope via well-defined interfaces, known to all parties


7.3.3

Active Capabilities 
- smart contracts only triggered by external transactions
- timer events not supported 
	- implement heartbeat function?
	- dangers:  What interval do I have to set? 
				What happens if there is a network error?

AC do implement scopes (Visibility constraints)
ACES does not implement scopes
indistinguishablility obfuscation: 
	- Can run on ACES
	- Observer can not determine of program a or b runs 
	- not available 

All parties public on blockchain
All parties pseudonymized 
How does zero cash work?

All messages with content stored publicly
Content level Visibility constraints should be enforced by encryption
Is that not already implemented????
If encrypted, calculations are no longer possible
homomorphic encryptions and zkSNARKs


Storage limitations of data: 
Storing bigger amounts of data (img, doc or videos) is hard on-chain
every client has to download the entire chain
use of-chain storage to solve that
problem: if the vital data is not in the chain, then an AC is useless
Can I not just store a hash-value of an off-chain document, to validate it???


Cost to execute a smart contract is varying (gas price)
price has to be payed by one party and is not distributed


















