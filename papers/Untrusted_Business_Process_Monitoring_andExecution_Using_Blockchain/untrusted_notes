collaborative processes with 
wechoregraphy monitor/C-Monitor: 
	saves all transactions between parties 
active mediator: 
	coordinates transactions between partiesx

smart contract: 
	script written with solidity, exeuted on blockchain. 
	Can not access external APIs/Sources

main components 
	translator:	BPMN -> factory contracts
			"simple" translator: Symbole direkt zu Code
	C-Monitor:	uses smart contracts to MONITOR transactions
	mediator: 	uses smart contracts to IMPLEMENT transactions
	Interface/
	triggers:	Interface to external things


C-Monitor and mediator are split into factory and instances

Goals/advantages of this architecture: 
	no trust needed
	messages must be conform, to change the state of the process
	payments and documents can be coded into contracts/escrow
	immutable ledger keeps track of transactions

Translater Ã¼bersetzt zur translate time 
instanciation of factory during run time
	
difference generator vs translator?
how does the interface work, when I can not call external 
	things from within smart contracts

escrow: 
	sort of a save
	parties can "store" money here
	money is given to parties, if required
	Solves the probelm: How can I make sure that that other party pays


